{"ast":null,"code":"import _asyncToGenerator from \"D:/Demo/TODO/TODO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { lastValueFrom } from 'rxjs';\nimport { ToDo } from '../Models/to-do';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ToDoService {\n  constructor(_http) {\n    this._http = _http;\n  }\n\n  Get() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return lastValueFrom(yield _this._http.get('https://localhost:7054/api/Todo')).then(res => {\n        if (res.status != \"success\") {\n          return -1;\n        }\n\n        console.log(res);\n        return _this.ToToDoList(res.data);\n      });\n    })();\n  }\n\n  Post(todo) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return lastValueFrom(yield _this2._http.post('https://localhost:7054/api/Todo', todo)).then(res => {\n        if (res.status != \"success\") {\n          return -1;\n        }\n\n        return 0;\n      });\n    })();\n  }\n  /**\r\n   * cập nhật\r\n   * @param todo\r\n   * @returns\r\n   */\n\n\n  Put(todo) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return lastValueFrom(yield _this3._http.put('https://localhost:7054/api/Todo', todo)).then(res => {\n        if (res.status != \"success\") {\n          return -1;\n        }\n\n        return 0;\n      });\n    })();\n  }\n\n  Del(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return lastValueFrom(yield _this4._http.delete('https://localhost:7054/api/Todo/' + id)).then(res => {\n        if (res.status != \"success\") {\n          return -1;\n        }\n\n        return 0;\n      });\n    })();\n  }\n\n  ToToDoList(dataLst) {\n    var todoLst = [];\n\n    for (var i = 0; i < dataLst.length; i++) {\n      try {\n        todoLst.push(new ToDo(dataLst[i].id, dataLst[i].name, dataLst[i].content, dataLst[i].isComplete));\n      } catch (_a) {}\n    }\n\n    return todoLst;\n  }\n\n}\n\nToDoService.ɵfac = function ToDoService_Factory(t) {\n  return new (t || ToDoService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nToDoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ToDoService,\n  factory: ToDoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Demo/TODO/TODO/src/app/Service/to-do.service.ts"],"names":["lastValueFrom","ToDo","i0","i1","ToDoService","constructor","_http","Get","get","then","res","status","console","log","ToToDoList","data","Post","todo","post","Put","put","Del","id","delete","dataLst","todoLst","i","length","push","name","content","isComplete","_a","ɵfac","ToDoService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { lastValueFrom } from 'rxjs';\r\nimport { ToDo } from '../Models/to-do';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class ToDoService {\r\n    constructor(_http) {\r\n        this._http = _http;\r\n    }\r\n    async Get() {\r\n        return lastValueFrom(await this._http.get('https://localhost:7054/api/Todo')).then((res) => {\r\n            if (res.status != \"success\") {\r\n                return -1;\r\n            }\r\n            console.log(res);\r\n            return (this.ToToDoList(res.data));\r\n        });\r\n    }\r\n    ;\r\n    async Post(todo) {\r\n        return lastValueFrom(await this._http.post('https://localhost:7054/api/Todo', todo)).then((res) => {\r\n            if (res.status != \"success\") {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    /**\r\n     * cập nhật\r\n     * @param todo\r\n     * @returns\r\n     */\r\n    async Put(todo) {\r\n        return lastValueFrom(await this._http.put('https://localhost:7054/api/Todo', todo)).then((res) => {\r\n            if (res.status != \"success\") {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    async Del(id) {\r\n        return lastValueFrom(await this._http.delete('https://localhost:7054/api/Todo/' + id)).then((res) => {\r\n            if (res.status != \"success\") {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n    ToToDoList(dataLst) {\r\n        var todoLst = [];\r\n        for (var i = 0; i < dataLst.length; i++) {\r\n            try {\r\n                todoLst.push(new ToDo(dataLst[i].id, dataLst[i].name, dataLst[i].content, dataLst[i].isComplete));\r\n            }\r\n            catch (_a) {\r\n            }\r\n        }\r\n        return todoLst;\r\n    }\r\n}\r\nToDoService.ɵfac = function ToDoService_Factory(t) { return new (t || ToDoService)(i0.ɵɵinject(i1.HttpClient)); };\r\nToDoService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ToDoService, factory: ToDoService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}